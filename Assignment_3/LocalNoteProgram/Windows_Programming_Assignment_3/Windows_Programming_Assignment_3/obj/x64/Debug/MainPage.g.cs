#pragma checksum "E:\NSCC_Classes_Year_2\Semester2\PROG2500-Windows_Programming\Repo\Assignment_3\LocalNoteProgram\Windows_Programming_Assignment_3\Windows_Programming_Assignment_3\MainPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "405E3F9DCAF027075FB94A1339EF84D1749CACC81B47F8015E48A6A64EA8A766"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Windows_Programming_Assignment_3
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Data_CollectionViewSource_Source(global::Windows.UI.Xaml.Data.CollectionViewSource obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.Boolean value)
            {
                obj.IsReadOnly = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_SearchBox_QueryText(global::Windows.UI.Xaml.Controls.SearchBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.QueryText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj10_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::Windows_Programming_Assignment_3.Models.NoteModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj11TextDisabled = false;

            public MainPage_obj10_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 35 && columnNumber == 28)
                {
                    isobj11TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10: // MainPage.xaml line 34
                        this.obj10 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 11: // MainPage.xaml line 35
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj10.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Windows_Programming_Assignment_3.Models.NoteModel) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Windows_Programming_Assignment_3.Models.NoteModel)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Windows_Programming_Assignment_3.Models.NoteModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 35
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::Windows_Programming_Assignment_3.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj2;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj3;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj4;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj5;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj6;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj7;
            private global::Windows.UI.Xaml.Data.CollectionViewSource obj8;
            private global::Windows.UI.Xaml.Controls.TextBox obj12;
            private global::Windows.UI.Xaml.Controls.SearchBox obj13;
            private global::Windows.UI.Xaml.Controls.ListView obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2TextDisabled = false;
            private static bool isobj3CommandDisabled = false;
            private static bool isobj4CommandDisabled = false;
            private static bool isobj5CommandDisabled = false;
            private static bool isobj6CommandDisabled = false;
            private static bool isobj7CommandDisabled = false;
            private static bool isobj8SourceDisabled = false;
            private static bool isobj12IsReadOnlyDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13QueryTextDisabled = false;
            private static bool isobj14SelectedItemDisabled = false;

            private MainPage_obj1_BindingsTracking bindingsTracking;

            public MainPage_obj1_Bindings()
            {
                this.bindingsTracking = new MainPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 16 && columnNumber == 28)
                {
                    isobj2TextDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 38)
                {
                    isobj3CommandDisabled = true;
                }
                else if (lineNumber == 19 && columnNumber == 39)
                {
                    isobj4CommandDisabled = true;
                }
                else if (lineNumber == 20 && columnNumber == 39)
                {
                    isobj5CommandDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 41)
                {
                    isobj6CommandDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 44)
                {
                    isobj7CommandDisabled = true;
                }
                else if (lineNumber == 32 && columnNumber == 17)
                {
                    isobj8SourceDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 60)
                {
                    isobj12IsReadOnlyDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 201)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 24)
                {
                    isobj13QueryTextDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 21)
                {
                    isobj14SelectedItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // MainPage.xaml line 16
                        this.obj2 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    case 3: // MainPage.xaml line 18
                        this.obj3 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 4: // MainPage.xaml line 19
                        this.obj4 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 5: // MainPage.xaml line 20
                        this.obj5 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 6: // MainPage.xaml line 22
                        this.obj6 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 7: // MainPage.xaml line 25
                        this.obj7 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 8: // MainPage.xaml line 31
                        this.obj8 = (global::Windows.UI.Xaml.Data.CollectionViewSource)target;
                        break;
                    case 12: // MainPage.xaml line 61
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // MainPage.xaml line 47
                        this.obj13 = (global::Windows.UI.Xaml.Controls.SearchBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // MainPage.xaml line 53
                        this.obj14 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Windows_Programming_Assignment_3.MainPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Windows_Programming_Assignment_3.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NoteViewModelInstance(obj.NoteViewModelInstance, phase);
                    }
                }
            }
            private void Update_NoteViewModelInstance(global::Windows_Programming_Assignment_3.ViewModels.NoteViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NoteViewModelInstance(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NoteViewModelInstance_SelectedNoteTitle(obj.SelectedNoteTitle, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_NoteViewModelInstance_AddCommand(obj.AddCommand, phase);
                        this.Update_NoteViewModelInstance_SaveCommand(obj.SaveCommand, phase);
                        this.Update_NoteViewModelInstance_EditCommand(obj.EditCommand, phase);
                        this.Update_NoteViewModelInstance_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_NoteViewModelInstance_ExitCommand(obj.ExitCommand, phase);
                        this.Update_NoteViewModelInstance_Notes(obj.Notes, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NoteViewModelInstance_ReadOnly(obj.ReadOnly, phase);
                        this.Update_NoteViewModelInstance_SelectedNoteDescription(obj.SelectedNoteDescription, phase);
                        this.Update_NoteViewModelInstance_Filter(obj.Filter, phase);
                        this.Update_NoteViewModelInstance_SelectedNote(obj.SelectedNote, phase);
                    }
                }
            }
            private void Update_NoteViewModelInstance_SelectedNoteTitle(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 16
                    if (!isobj2TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj2, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_AddCommand(global::Windows_Programming_Assignment_3.Commands.AddCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 18
                    if (!isobj3CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj3, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_SaveCommand(global::Windows_Programming_Assignment_3.Commands.SaveCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 19
                    if (!isobj4CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj4, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_EditCommand(global::Windows_Programming_Assignment_3.Commands.EditCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 20
                    if (!isobj5CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_DeleteCommand(global::Windows_Programming_Assignment_3.Commands.DeleteCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 22
                    if (!isobj6CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj6, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_ExitCommand(global::Windows_Programming_Assignment_3.Commands.ExitCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 25
                    if (!isobj7CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj7, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_Notes(global::System.Collections.ObjectModel.ObservableCollection<global::Windows_Programming_Assignment_3.Models.NoteModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 31
                    if (!isobj8SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Data_CollectionViewSource_Source(this.obj8, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_ReadOnly(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 61
                    if (!isobj12IsReadOnlyDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj12, obj);
                    }
                }
            }
            private void Update_NoteViewModelInstance_SelectedNoteDescription(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 61
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_Filter(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 47
                    if (!isobj13QueryTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SearchBox_QueryText(this.obj13, obj, null);
                    }
                }
            }
            private void Update_NoteViewModelInstance_SelectedNote(global::Windows_Programming_Assignment_3.Models.NoteModel obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 53
                    if (!isobj14SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj14, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_2_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NoteViewModelInstance != null)
                        {
                            this.dataRoot.NoteViewModelInstance.SelectedNoteTitle = this.obj2.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_IsReadOnly()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NoteViewModelInstance != null)
                        {
                            this.dataRoot.NoteViewModelInstance.ReadOnly = this.obj12.IsReadOnly;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NoteViewModelInstance != null)
                        {
                            this.dataRoot.NoteViewModelInstance.SelectedNoteDescription = this.obj12.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_QueryText()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NoteViewModelInstance != null)
                        {
                            this.dataRoot.NoteViewModelInstance.Filter = this.obj13.QueryText;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NoteViewModelInstance != null)
                        {
                            this.dataRoot.NoteViewModelInstance.SelectedNote = (global::Windows_Programming_Assignment_3.Models.NoteModel)this.obj14.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainPage_obj1_Bindings> weakRefToBindingObj; 

                public MainPage_obj1_BindingsTracking(MainPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainPage_obj1_Bindings>(obj);
                }

                public MainPage_obj1_Bindings TryGetBindingObject()
                {
                    MainPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_NoteViewModelInstance(null);
                }

                public void PropertyChanged_NoteViewModelInstance(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Windows_Programming_Assignment_3.ViewModels.NoteViewModel obj = sender as global::Windows_Programming_Assignment_3.ViewModels.NoteViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_NoteViewModelInstance_SelectedNoteTitle(obj.SelectedNoteTitle, DATA_CHANGED);
                                bindings.Update_NoteViewModelInstance_ReadOnly(obj.ReadOnly, DATA_CHANGED);
                                bindings.Update_NoteViewModelInstance_SelectedNoteDescription(obj.SelectedNoteDescription, DATA_CHANGED);
                                bindings.Update_NoteViewModelInstance_Filter(obj.Filter, DATA_CHANGED);
                                bindings.Update_NoteViewModelInstance_SelectedNote(obj.SelectedNote, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedNoteTitle":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteViewModelInstance_SelectedNoteTitle(obj.SelectedNoteTitle, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReadOnly":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteViewModelInstance_ReadOnly(obj.ReadOnly, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedNoteDescription":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteViewModelInstance_SelectedNoteDescription(obj.SelectedNoteDescription, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Filter":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteViewModelInstance_Filter(obj.Filter, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedNote":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteViewModelInstance_SelectedNote(obj.SelectedNote, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Windows_Programming_Assignment_3.ViewModels.NoteViewModel cache_NoteViewModelInstance = null;
                public void UpdateChildListeners_NoteViewModelInstance(global::Windows_Programming_Assignment_3.ViewModels.NoteViewModel obj)
                {
                    if (obj != cache_NoteViewModelInstance)
                    {
                        if (cache_NoteViewModelInstance != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_NoteViewModelInstance).PropertyChanged -= PropertyChanged_NoteViewModelInstance;
                            cache_NoteViewModelInstance = null;
                        }
                        if (obj != null)
                        {
                            cache_NoteViewModelInstance = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_NoteViewModelInstance;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_IsReadOnly();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_13(global::Windows.UI.Xaml.Controls.SearchBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SearchBox.QueryTextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_QueryText();
                        }
                    });
                }
                public void RegisterTwoWayListener_14(global::Windows.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_SelectedItem();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 8: // MainPage.xaml line 31
                {
                    this.NoteCollection = (global::Windows.UI.Xaml.Data.CollectionViewSource)(target);
                }
                break;
            case 9: // MainPage.xaml line 33
                {
                    this.NoteTemplate = (global::Windows.UI.Xaml.DataTemplate)(target);
                }
                break;
            case 13: // MainPage.xaml line 47
                {
                    this.SearchBox = (global::Windows.UI.Xaml.Controls.SearchBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 10: // MainPage.xaml line 34
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element10 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    MainPage_obj10_Bindings bindings = new MainPage_obj10_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element10.DataContext);
                    element10.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element10, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element10, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

